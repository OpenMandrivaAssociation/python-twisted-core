--- TwistedCore-10.1.0/twisted/application/internet.py.bak	2010-07-19 16:46:09.000000000 -0400
+++ TwistedCore-10.1.0/twisted/application/internet.py	2010-07-19 16:46:45.000000000 -0400
@@ -193,7 +193,7 @@
 }
 
 import new
-for tran in 'TCP UNIX SSL UDP UNIXDatagram Multicast'.split():
+for tran in 'TCP UNIX SSL TLS UDP UNIXDatagram Multicast'.split():
     for side in 'Server Client'.split():
         if tran == "Multicast" and side == "Client":
             continue
--- TwistedCore-10.1.0/twisted/application/strports.py.bak	2010-07-19 16:46:58.000000000 -0400
+++ TwistedCore-10.1.0/twisted/application/strports.py	2010-07-19 16:49:02.000000000 -0400
@@ -79,9 +79,25 @@
     return ((int(port), factory, cf),
             {'interface': interface, 'backlog': int(backlog)})
 
+def _parseTLS(factory, port, privateKey='server.pem', certKey=None,
+              sslmethod=None, interface='', backlog=50):
+    from gnutls.interfaces.twisted import X509Credentials
+    from gnutls.crypto import X509Certificate, X509PrivateKey
+
+    if certKey is None:
+        certKey = privateKey
+
+    cert = X509Certificate(open(certKey).read())
+    key = X509PrivateKey(open(privateKey).read())
+    cf = X509Credentials(cert, key)
+
+    return ((int(port), factory, cf),
+            {'interface': interface, 'backlog': int(backlog)})
+
 _funcs = {"tcp": _parseTCP,
           "unix": _parseUNIX,
-          "ssl": _parseSSL}
+          "ssl": _parseSSL,
+          "tls": _parseTLS}
 
 _OP, _STRING = range(2)
 def _tokenize(description):
